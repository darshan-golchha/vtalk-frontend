{"ast":null,"code":"var _jsxFileName = \"/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/chatroom.css';\nimport { useLoadingContext } from '../components/Loader';\nimport { IoSendSharp } from \"react-icons/io5\";\nimport { IoExit } from \"react-icons/io5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatPage = () => {\n  _s();\n  var _location$state;\n  const {\n    isLoading,\n    setLoading,\n    disableAllInputs,\n    enableAllInputs\n  } = useLoadingContext();\n  const location = useLocation();\n  const user = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.user;\n  const [publicChats, setPublicChats] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userData, setUserData] = useState({\n    \"message\": \"\",\n    \"connected\": false\n  });\n  const [username, setUsername] = useState(user.fullName);\n  const [roomCode, setRoomCode] = useState(user.roomCode);\n  const navigate = useNavigate();\n  const chatMessagesRef = useRef(null);\n  const [label, setLabel] = useState('Room Label');\n  const [userId, setUserId] = useState(user.userId);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (!user) {\n      leaveChatroom();\n    }\n    if (roomCode) {\n      connect();\n    }\n\n    // Set up beforeunload event listener\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    // Cleanup event listener on component unmount\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [roomCode]);\n  const handleBeforeUnload = () => {\n    axios.get('http://10.140.254.17:8080/deleteUser?id=' + user.userId).catch(err => {\n      console.error(err);\n    });\n    leaveChatroom();\n  };\n  const connect = () => {\n    let Sock = new SockJS('http://10.140.254.17:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const onConnected = () => {\n    // Getting previous chats of the room\n    axios.get('http://10.140.254.17:8080/chats?roomcode=' + roomCode).then(res => {\n      setPublicChats(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n    stompClient.send(`/app/user/connectUser`, {}, JSON.stringify(user));\n    stompClient.subscribe(`/user/vtalk/messages/${roomCode}`, onMessageReceived);\n    axios.get('http://10.140.254.17:8080/roomLabel' + '?roomcode=' + roomCode).then(res => {\n      setLabel(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n    setRoomCode(user.roomCode);\n  };\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n    setPublicChats(prevChats => [...prevChats, payloadData]);\n\n    // Scroll to the bottom of the chatMessagesRef on new message\n    if (chatMessagesRef.current) {\n      const lastMessage = chatMessagesRef.current.lastChild;\n      lastMessage.scrollIntoView({\n        behavior: 'smooth',\n        inline: 'quickest'\n      });\n    }\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"message\": value\n    });\n  };\n  const sendValue = event => {\n    event.preventDefault();\n    setUserData({\n      ...userData,\n      \"connected\": true\n    });\n    setLoading(true);\n    disableAllInputs();\n    if (stompClient && userData.message) {\n      var chatMessage = {\n        fullName: username,\n        roomCode: roomCode,\n        senderId: user.userId,\n        content: userData.message,\n        timestamp: new Date()\n      };\n      stompClient.send(`/app/chat`, {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n    setLoading(false);\n    enableAllInputs();\n  };\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [publicChats]);\n  const leaveChatroom = () => {\n    setLoading(true);\n    disableAllInputs();\n    if (stompClient) {\n      stompClient.send(`/app/user/disconnectUser`, {}, JSON.stringify(user));\n      setUserData({\n        ...userData,\n        \"connected\": false\n      });\n      axios.get('http://10.140.254.17:8080/leaveRoom?roomcode=' + roomCode + '&userid=' + userId).then(res => {\n        setLoading(false);\n        enableAllInputs();\n        navigate(`/rooms`, {\n          state: {\n            user: res.data\n          }\n        });\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  };\n  const getDateStampText = dateString => {\n    const today = new Date().toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n    const yesterday = new Date(Date.now() - 86400000).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n    if (dateString === today) {\n      return 'Today';\n    } else if (dateString === yesterday) {\n      return 'Yesterday';\n    } else {\n      return dateString;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: \"Leaving The Chat Room...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-label\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IoExit, {\n          className: \"leave-button\",\n          onClick: leaveChatroom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        ref: chatMessagesRef,\n        children: publicChats.map((chat, index, chats) => {\n          // Get the date string in \"YYYY-MM-DD\" format\n          const currentDate = new Date(chat.timestamp).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          });\n\n          // Check if the current message has a different date than the previous one\n          const showDateStamp = index === 0 || currentDate !== new Date(chats[index - 1].timestamp).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          });\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [showDateStamp && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message notification date-stamp\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: getDateStampText(currentDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${chat.senderId === userId ? \"self\" : \"\"} ${chat.fullName ? \"\" : \"notification\"}`,\n              children: [chat.fullName && chat.senderId !== userId && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: chat.fullName[0].toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 65\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: chat.fullName ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"content-message\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"message-fullname\",\n                      children: chat.fullName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: chat.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"message-time\",\n                      children: new Date(chat.timestamp).toLocaleTimeString([], {\n                        hour: '2-digit',\n                        minute: '2-digit',\n                        hour12: true\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"notification\",\n                    children: chat.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), chat.fullName && chat.senderId === userId && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: chat.fullName[0].toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 65\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendValue,\n        className: \"chat-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"Enter your message...\",\n            value: userData.message,\n            onChange: handleMessage,\n            onSubmit: sendValue,\n            ref: inputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IoSendSharp, {\n            className: \"send-button\",\n            onClick: sendValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"Ur8Kh0y4gkkk0PzSKYmWHvG7vCs=\", false, function () {\n  return [useLoadingContext, useLocation, useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","over","SockJS","useLocation","useNavigate","axios","useLoadingContext","IoSendSharp","IoExit","jsxDEV","_jsxDEV","stompClient","ChatPage","_s","_location$state","isLoading","setLoading","disableAllInputs","enableAllInputs","location","user","state","publicChats","setPublicChats","users","setUsers","userData","setUserData","username","setUsername","fullName","roomCode","setRoomCode","navigate","chatMessagesRef","label","setLabel","userId","setUserId","inputRef","leaveChatroom","connect","window","addEventListener","handleBeforeUnload","removeEventListener","get","catch","err","console","error","Sock","onConnected","onError","then","res","data","send","JSON","stringify","subscribe","onMessageReceived","payload","payloadData","parse","body","prevChats","current","lastMessage","lastChild","scrollIntoView","behavior","inline","log","handleMessage","event","value","target","sendValue","preventDefault","message","chatMessage","senderId","content","timestamp","Date","focus","getDateStampText","dateString","today","toLocaleDateString","year","month","day","yesterday","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","map","chat","index","chats","currentDate","showDateStamp","Fragment","toUpperCase","toLocaleTimeString","hour","minute","hour12","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/chatroom.css';\nimport { useLoadingContext } from '../components/Loader';\nimport { IoSendSharp } from \"react-icons/io5\";\nimport { IoExit } from \"react-icons/io5\";\n\nvar stompClient = null;\n\nconst ChatPage = () => {\n  const { isLoading, setLoading, disableAllInputs, enableAllInputs } = useLoadingContext();\n  const location = useLocation();\n  const user = location.state?.user;\n  const [publicChats, setPublicChats] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userData, setUserData] = useState({ \"message\": \"\", \"connected\": false });\n  const [username, setUsername] = useState(user.fullName);\n  const [roomCode, setRoomCode] = useState(user.roomCode);\n  const navigate = useNavigate();\n  const chatMessagesRef = useRef(null);\n  const [label, setLabel] = useState('Room Label');\n  const [userId, setUserId] = useState(user.userId);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (!user) {\n      leaveChatroom();\n    }\n    if (roomCode) {\n      connect();\n    }\n\n    // Set up beforeunload event listener\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    // Cleanup event listener on component unmount\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [roomCode]);\n\n  const handleBeforeUnload = () => {\n    axios\n      .get('http://10.140.254.17:8080/deleteUser?id=' + user.userId)\n      .catch((err) => {\n        console.error(err);\n      });\n    leaveChatroom();\n  };\n\n  const connect = () => {\n    let Sock = new SockJS('http://10.140.254.17:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    // Getting previous chats of the room\n    axios\n      .get('http://10.140.254.17:8080/chats?roomcode=' + roomCode)\n      .then((res) => {\n        setPublicChats(res.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    stompClient.send(`/app/user/connectUser`, {}, JSON.stringify(user));\n    stompClient.subscribe(`/user/vtalk/messages/${roomCode}`, onMessageReceived);\n    axios\n      .get('http://10.140.254.17:8080/roomLabel' + '?roomcode=' + roomCode)\n      .then((res) => {\n        setLabel(res.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    setRoomCode(user.roomCode);\n  };\n\n  const onMessageReceived = (payload) => {\n    var payloadData = JSON.parse(payload.body);\n    setPublicChats((prevChats) => [...prevChats, payloadData]);\n\n    // Scroll to the bottom of the chatMessagesRef on new message\n    if (chatMessagesRef.current) {\n      const lastMessage = chatMessagesRef.current.lastChild;\n      lastMessage.scrollIntoView({ behavior: 'smooth', inline: 'quickest'});\n    }\n  };\n\n  const onError = (err) => {\n    console.log(err);\n  };\n\n  const handleMessage = (event) => {\n    const { value } = event.target;\n    setUserData({ ...userData, \"message\": value });\n  };\n\n  const sendValue = (event) => {\n    event.preventDefault();\n    setUserData({ ...userData, \"connected\": true });\n    setLoading(true);\n    disableAllInputs();\n    if (stompClient && userData.message) {\n      var chatMessage = {\n        fullName: username,\n        roomCode: roomCode,\n        senderId: user.userId,\n        content: userData.message,\n        timestamp: new Date(),\n      };\n      stompClient.send(`/app/chat`, {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData, \"message\": \"\" });\n    }\n    setLoading(false);\n    enableAllInputs();\n  };\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [publicChats]);\n\n  const leaveChatroom = () => {\n    setLoading(true);\n    disableAllInputs();\n    if (stompClient) {\n      stompClient.send(`/app/user/disconnectUser`, {}, JSON.stringify(user));\n      setUserData({ ...userData, \"connected\": false });\n      axios\n        .get('http://10.140.254.17:8080/leaveRoom?roomcode=' + roomCode + '&userid=' + userId)\n        .then((res) => {\n          setLoading(false);\n          enableAllInputs();\n          navigate(`/rooms`, { state: { user: res.data } });\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  };\n\n  const getDateStampText = (dateString) => {\n    const today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    const yesterday = new Date(Date.now() - 86400000).toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n\n    if (dateString === today) {\n      return 'Today';\n    } else if (dateString === yesterday) {\n      return 'Yesterday';\n    } else {\n      return dateString;\n    }\n  };\n\n\n  return (\n    <div className='chat-window'>\n\n      <div className=\"chat-box\">\n        {isLoading && <div className=\"loader\">Leaving The Chat Room...</div>}\n        <div className='chat-top'>\n          <div className=\"room-label\">{label}</div>\n          <IoExit className='leave-button' onClick={leaveChatroom} />\n        </div>\n        <div className=\"chat-content\" ref={chatMessagesRef}>\n          {publicChats.map((chat, index, chats) => {\n            // Get the date string in \"YYYY-MM-DD\" format\n            const currentDate = new Date(chat.timestamp).toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n\n            // Check if the current message has a different date than the previous one\n            const showDateStamp = index === 0 || currentDate !== new Date(chats[index - 1].timestamp).toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n\n            return (\n              <React.Fragment key={index}>\n                {showDateStamp && (\n                  <div className=\"message notification date-stamp\">\n                    <p>{getDateStampText(currentDate)}</p>\n                  </div>\n                )}\n\n                <div className={`message ${chat.senderId === userId ? \"self\" : \"\"} ${chat.fullName ? \"\" : \"notification\"}`} key={index}>\n                  {chat.fullName && chat.senderId !== userId && <div className=\"avatar\">{chat.fullName[0].toUpperCase()}</div>}\n                  <div className=\"message-data\">\n                    <div>\n                      {chat.fullName ? (\n                        <div className='content-message'>\n                          <p className='message-fullname'>{chat.fullName}</p>\n                          <p>{chat.content}</p>\n                          <p className=\"message-time\">\n                            {new Date(chat.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true })}\n                          </p>\n                        </div>\n                      ) : (\n                        <p className=\"notification\">{chat.content}</p>\n                      )}\n                    </div>\n                  </div>\n                  {chat.fullName && chat.senderId === userId && <div className=\"avatar\">{chat.fullName[0].toUpperCase()}</div>}\n                </div>\n              </React.Fragment>\n            );\n          })}\n        </div>\n\n        <form onSubmit={sendValue} className='chat-form'>\n          <div className=\"send-message\">\n            <input\n              type=\"text\"\n              className=\"input-message\"\n              placeholder=\"Enter your message...\"\n              value={userData.message}\n              onChange={handleMessage}\n              onSubmit={sendValue}\n              ref={inputRef}\n            />\n            <IoSendSharp className='send-button' onClick={sendValue} />\n            {/* <button className='send-button' onClick={sendValue}>Send</button> */}\n          </div>\n        </form>\n      </div>\n\n    </div>\n\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}