{"ast":null,"code":"var _jsxFileName = \"/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/RoomSelection.js\",\n  _s = $RefreshSig$();\n// RoomSelection.js\nimport React, { useEffect, useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomSelection = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [roomDescription, setRoomDescription] = useState('');\n  useEffect(() => {\n    connect();\n  }, []);\n  const connect = () => {\n    let stompClient = null;\n    const Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n    function onConnected() {\n      console.log('Connected!');\n      stompClient.subscribe('/topic/public', onRoomsReceived);\n    }\n    function onError(err) {\n      console.log('Error:', err);\n    }\n  };\n  const onRoomsReceived = payload => {\n    const payloadData = JSON.parse(payload.body);\n    setRooms(payloadData);\n  };\n  const handleCreateRoom = () => {\n    // Ensure roomDescription is not empty before creating a room\n    if (roomDescription.trim() !== '') {\n      stompClient.send('/app/createRoom', {}, JSON.stringify({\n        description: roomDescription\n      }));\n      // Assuming you have a default username for now\n      const username = 'defaultUsername';\n      window.location.href = `/chat/${roomCode}/${username}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose or Create a Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter room description\",\n      value: roomDescription,\n      onChange: e => setRoomDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleCreateRoom,\n      children: \"Create Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Available Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleRoomSelected(room.roomCode),\n          children: \"Select Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, room.roomCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomSelection, \"hKK8U3n/Gyydv7ceFjN8PdCrdQo=\");\n_c = RoomSelection;\nexport default RoomSelection;\nvar _c;\n$RefreshReg$(_c, \"RoomSelection\");","map":{"version":3,"names":["React","useEffect","useState","SockJS","over","jsxDEV","_jsxDEV","RoomSelection","_s","rooms","setRooms","roomDescription","setRoomDescription","connect","stompClient","Sock","onConnected","onError","console","log","subscribe","onRoomsReceived","err","payload","payloadData","JSON","parse","body","handleCreateRoom","trim","send","stringify","description","username","window","location","href","roomCode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","room","handleRoomSelected","_c","$RefreshReg$"],"sources":["/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/RoomSelection.js"],"sourcesContent":["// RoomSelection.js\nimport React, { useEffect, useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\n\nconst RoomSelection = () => {\n  const [rooms, setRooms] = useState([]);\n  const [roomDescription, setRoomDescription] = useState('');\n\n  useEffect(() => {\n    connect();\n  }, []);\n\n  const connect = () => {\n    let stompClient = null;\n\n    const Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n\n    function onConnected() {\n      console.log('Connected!');\n      stompClient.subscribe('/topic/public', onRoomsReceived);\n    }\n\n    function onError(err) {\n      console.log('Error:', err);\n    }\n  };\n\n  const onRoomsReceived = (payload) => {\n    const payloadData = JSON.parse(payload.body);\n    setRooms(payloadData);\n  };\n\n  const handleCreateRoom = () => {\n    // Ensure roomDescription is not empty before creating a room\n    if (roomDescription.trim() !== '') {\n      stompClient.send('/app/createRoom', {}, JSON.stringify({ description: roomDescription }));\n      // Assuming you have a default username for now\n      const username = 'defaultUsername';\n      window.location.href = `/chat/${roomCode}/${username}`;\n    }\n  };\n\n  return (\n    <div className=\"room-selection\">\n      <h2>Choose or Create a Chat Room</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter room description\"\n        value={roomDescription}\n        onChange={(e) => setRoomDescription(e.target.value)}\n      />\n      <button type=\"button\" onClick={handleCreateRoom}>\n        Create Room\n      </button>\n      <h3>Available Rooms</h3>\n      <ul>\n        {rooms.map((room) => (\n          <li key={room.roomCode}>\n            <button type=\"button\" onClick={() => handleRoomSelected(room.roomCode)}>\n              Select Room\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RoomSelection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}