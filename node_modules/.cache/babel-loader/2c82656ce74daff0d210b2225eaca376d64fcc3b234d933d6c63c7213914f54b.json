{"ast":null,"code":"var _jsxFileName = \"/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatPage = ({\n  username,\n  roomCode\n}) => {\n  _s();\n  const [publicChats, setPublicChats] = useState([]);\n  const [userData, setUserData] = useState({\n    connected: false,\n    message: ''\n  });\n  useEffect(() => {\n    if (roomCode) {\n      connect();\n    }\n  }, [roomCode]);\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const onConnected = () => {\n    setUserData({\n      ...userData,\n      \"connected\": true\n    });\n    stompClient.subscribe(`/topic/${roomCode}`, onMessageReceived);\n    userJoin();\n  };\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: username,\n      roomCode: roomCode,\n      // Include roomCode in the message\n      status: \"JOIN\"\n    };\n    stompClient.send(`/app/message/${roomCode}`, {}, JSON.stringify(chatMessage));\n  };\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"JOIN\":\n        // Handle join logic if needed\n        break;\n      case \"MESSAGE\":\n        setPublicChats(prevChats => [...prevChats, payloadData]);\n        break;\n      case \"LEAVE\":\n        // Handle leave logic if needed\n        break;\n      default:\n        break;\n    }\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"message\": value\n    });\n  };\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: username,\n        roomCode: roomCode,\n        // Include roomCode in the message\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      stompClient.send(`/app/message/${roomCode}`, {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n  const leaveChatroom = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: username,\n        roomCode: roomCode,\n        // Include roomCode in the message\n        status: \"LEAVE\"\n      };\n      stompClient.send(`/app/message/${roomCode}`, {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"connected\": false\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"member-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chat-messages\",\n        children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `message ${chat.senderName === username && \"self\"}`,\n          children: [chat.senderName !== username && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: chat.senderName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-data\",\n            children: chat.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), chat.senderName === username && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar self\",\n            children: chat.senderName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 48\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"send-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-message\",\n          placeholder: \"enter the message\",\n          value: userData.message,\n          onChange: handleMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"send-button\",\n          onClick: sendValue,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"send-button\",\n          onClick: leaveChatroom,\n          children: \"leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"LpYDEagjy5RB3ZnQNI5zsiUIRSk=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","jsxDEV","_jsxDEV","stompClient","ChatPage","username","roomCode","_s","publicChats","setPublicChats","userData","setUserData","connected","message","connect","Sock","onConnected","onError","subscribe","onMessageReceived","userJoin","chatMessage","senderName","status","send","JSON","stringify","payload","payloadData","parse","body","prevChats","err","console","log","handleMessage","event","value","target","sendValue","leaveChatroom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","index","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\n\nvar stompClient =null;\nconst ChatPage = ({ username, roomCode }) => {\n\n  const [publicChats, setPublicChats] = useState([]);\n  const [userData, setUserData] = useState({\n    connected: false,\n    message: ''\n  });\n\n  useEffect(() => {\n    if (roomCode) {\n      connect();\n    }\n  }, [roomCode]);\n\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    setUserData({ ...userData, \"connected\": true });\n    stompClient.subscribe(`/topic/${roomCode}`, onMessageReceived);\n    userJoin();\n  };\n\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: username,\n      roomCode: roomCode, // Include roomCode in the message\n      status: \"JOIN\"\n    };\n    stompClient.send(`/app/message/${roomCode}`, {}, JSON.stringify(chatMessage));\n  };\n\n  const onMessageReceived = (payload) => {\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"JOIN\":\n        // Handle join logic if needed\n        break;\n      case \"MESSAGE\":\n        setPublicChats(prevChats => [...prevChats, payloadData]);\n        break;\n      case \"LEAVE\":\n        // Handle leave logic if needed\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onError = (err) => {\n    console.log(err);\n  };\n\n  const handleMessage = (event) => {\n    const { value } = event.target;\n    setUserData({ ...userData, \"message\": value });\n  };\n\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: username,\n        roomCode: roomCode, // Include roomCode in the message\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      stompClient.send(`/app/message/${roomCode}`, {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData, \"message\": \"\" });\n    }\n  };\n\n  const leaveChatroom = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: username,\n        roomCode: roomCode, // Include roomCode in the message\n        status: \"LEAVE\"\n      };\n      stompClient.send(`/app/message/${roomCode}`, {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData, \"connected\": false });\n    }\n  };\n\n  return (\n    <div className=\"chat-box\">\n      <div className=\"member-list\">\n        <ul>\n          {/* Room members or other relevant UI can be added here */}\n        </ul>\n      </div>\n      <div className=\"chat-content\">\n        <ul className=\"chat-messages\">\n          {publicChats.map((chat, index) => (\n            <li className={`message ${chat.senderName === username && \"self\"}`} key={index}>\n              {chat.senderName !== username && <div className=\"avatar\">{chat.senderName}</div>}\n              <div className=\"message-data\">{chat.message}</div>\n              {chat.senderName === username && <div className=\"avatar self\">{chat.senderName}</div>}\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"send-message\">\n          <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} />\n          <button type=\"button\" className=\"send-button\" onClick={sendValue}>send</button>\n          <button type=\"button\" className=\"send-button\" onClick={leaveChatroom}>leave</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}