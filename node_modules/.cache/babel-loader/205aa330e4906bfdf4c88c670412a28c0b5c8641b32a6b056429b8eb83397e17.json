{"ast":null,"code":"var _jsxFileName = \"/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatPage = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const user = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.user;\n  const [publicChats, setPublicChats] = useState([]);\n  const [userData, setUserData] = useState({\n    \"message\": \"\",\n    \"connected\": true\n  });\n  const [username, setUsername] = useState(user.fullName);\n  const [roomCode, setRoomCode] = useState(user.roomCode);\n  const navigate = useNavigate();\n  const chatMessagesRef = useRef(null);\n  useEffect(() => {\n    if (roomCode) {\n      connect();\n    }\n\n    // Set up beforeunload event listener\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    // Cleanup event listener on component unmount\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [roomCode]);\n  const handleBeforeUnload = () => {\n    // Call leaveChatroom before the page is unloaded\n    leaveChatroom();\n  };\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const onConnected = () => {\n    stompClient.send(`/app/user/connectUser`, {}, JSON.stringify(user));\n    stompClient.subscribe(`/user/vtalk/messages/${roomCode}`, onMessageReceived);\n    setUsername(user.fullName);\n    setRoomCode(user.roomCode);\n  };\n  const onMessageReceived = payload => {\n    console.log(\"Received payload:\", payload);\n    var payloadData = JSON.parse(payload.body); // Adjust this based on the actual structure\n    console.log(\"Parsed data:\", payloadData);\n    setPublicChats(prevChats => [...prevChats, payloadData]);\n\n    // Scroll to the bottom of the chatMessagesRef on new message\n    chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"message\": value\n    });\n  };\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        fullName: username,\n        roomCode: roomCode,\n        content: userData.message,\n        timestamp: new Date()\n      };\n      console.log(\"Sending message:\", chatMessage);\n      stompClient.send(`/app/chat`, {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n  const leaveChatroom = () => {\n    if (stompClient) {\n      stompClient.send(`/app/user/disconnectUser`, {}, JSON.stringify(user));\n      setUserData({\n        ...userData,\n        \"connected\": false\n      });\n      axios.get('http://localhost:8080/leaveRoom?roomcode=' + roomCode + '&userid=' + user.userId).then(res => {\n        navigate(`/rooms`, {\n          state: {\n            user: res.data\n          }\n        });\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      ref: chatMessagesRef,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chat-messages\",\n        children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `message ${chat.fullName === username && \"self\"}`,\n          children: [chat.fullName !== username && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: chat.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-data\",\n            children: chat.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), chat.fullName === username && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar self\",\n            children: chat.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 46\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-message\",\n        placeholder: \"enter the message\",\n        value: userData.message,\n        onChange: handleMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"send-button\",\n        onClick: sendValue,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"send-button\",\n        onClick: leaveChatroom,\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"NwHIVTBlwINtya6e9SQjWMCT4yI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","over","SockJS","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","stompClient","ChatPage","_s","_location$state","location","user","state","publicChats","setPublicChats","userData","setUserData","username","setUsername","fullName","roomCode","setRoomCode","navigate","chatMessagesRef","connect","window","addEventListener","handleBeforeUnload","removeEventListener","leaveChatroom","Sock","onConnected","onError","send","JSON","stringify","subscribe","onMessageReceived","payload","console","log","payloadData","parse","body","prevChats","current","scrollTop","scrollHeight","err","handleMessage","event","value","target","sendValue","chatMessage","content","message","timestamp","Date","get","userId","then","res","data","catch","error","className","children","ref","map","chat","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nvar stompClient = null;\n\nconst ChatPage = () => {\n  const location = useLocation();\n  const user = location.state?.user;\n  const [publicChats, setPublicChats] = useState([]);\n  const [userData, setUserData] = useState({ \"message\": \"\", \"connected\": true });\n  const [username, setUsername] = useState(user.fullName);\n  const [roomCode, setRoomCode] = useState(user.roomCode);\n  const navigate = useNavigate();\n  const chatMessagesRef = useRef(null);\n\n  useEffect(() => {\n    if (roomCode) {\n      connect();\n    }\n\n    // Set up beforeunload event listener\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    // Cleanup event listener on component unmount\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [roomCode]);\n\n  const handleBeforeUnload = () => {\n    // Call leaveChatroom before the page is unloaded\n    leaveChatroom();\n  };\n\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    stompClient.send(`/app/user/connectUser`, {}, JSON.stringify(user));\n    stompClient.subscribe(`/user/vtalk/messages/${roomCode}`, onMessageReceived);\n    setUsername(user.fullName);\n    setRoomCode(user.roomCode);\n  };\n\n  const onMessageReceived = (payload) => {\n    console.log(\"Received payload:\", payload);\n    var payloadData = JSON.parse(payload.body); // Adjust this based on the actual structure\n    console.log(\"Parsed data:\", payloadData);\n    setPublicChats(prevChats => [...prevChats, payloadData]);\n\n    // Scroll to the bottom of the chatMessagesRef on new message\n    chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n  };\n\n  const onError = (err) => {\n    console.log(err);\n  };\n\n  const handleMessage = (event) => {\n    const { value } = event.target;\n    setUserData({ ...userData, \"message\": value });\n  };\n\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        fullName: username,\n        roomCode: roomCode,\n        content: userData.message,\n        timestamp: new Date(),\n      };\n      console.log(\"Sending message:\", chatMessage);\n      stompClient.send(`/app/chat`, {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData, \"message\": \"\" });\n    }\n  };\n\n  const leaveChatroom = () => {\n    if (stompClient) {\n      stompClient.send(`/app/user/disconnectUser`, {}, JSON.stringify(user));\n      setUserData({ ...userData, \"connected\": false });\n      axios\n        .get('http://localhost:8080/leaveRoom?roomcode=' + roomCode + '&userid=' + user.userId)\n        .then((res) => {\n          navigate(`/rooms`, { state: { user: res.data } });\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  };\n\n  return (\n    <div className=\"chat-box\">\n      <div className=\"chat-content\" ref={chatMessagesRef}>\n        <ul className=\"chat-messages\">\n          {publicChats.map((chat, index) => (\n            <li className={`message ${chat.fullName === username && \"self\"}`} key={index}>\n              {chat.fullName !== username && <div className=\"avatar\">{chat.fullName}</div>}\n              <div className=\"message-data\">{chat.content}</div>\n              {chat.fullName === username && <div className=\"avatar self\">{chat.fullName}</div>}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"send-message\">\n        <input\n          type=\"text\"\n          className=\"input-message\"\n          placeholder=\"enter the message\"\n          value={userData.message}\n          onChange={handleMessage}\n        />\n        <button type=\"button\" className=\"send-button\" onClick={sendValue}>\n          Send\n        </button>\n        <button type=\"button\" className=\"send-button\" onClick={leaveChatroom}>\n          Leave\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,QAAQ,SAAS;AAC9B,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,IAAIC,WAAW,GAAG,IAAI;AAEtB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACrB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,IAAI,IAAAF,eAAA,GAAGC,QAAQ,CAACE,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAgBE,IAAI;EACjC,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC;IAAE,SAAS,EAAE,EAAE;IAAE,WAAW,EAAE;EAAK,CAAC,CAAC;EAC9E,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAACc,IAAI,CAACQ,QAAQ,CAAC;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAACc,IAAI,CAACS,QAAQ,CAAC;EACvD,MAAME,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,eAAe,GAAGzB,MAAM,CAAC,IAAI,CAAC;EAEpCF,SAAS,CAAC,MAAM;IACd,IAAIwB,QAAQ,EAAE;MACZI,OAAO,CAAC,CAAC;IACX;;IAEA;IACAC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEC,kBAAkB,CAAC;;IAE3D;IACA,OAAO,MAAM;MACXF,MAAM,CAACG,mBAAmB,CAAC,cAAc,EAAED,kBAAkB,CAAC;IAChE,CAAC;EACH,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACAE,aAAa,CAAC,CAAC;EACjB,CAAC;EAED,MAAML,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIM,IAAI,GAAG,IAAI9B,MAAM,CAAC,0BAA0B,CAAC;IACjDM,WAAW,GAAGP,IAAI,CAAC+B,IAAI,CAAC;IACxBxB,WAAW,CAACkB,OAAO,CAAC,CAAC,CAAC,EAAEO,WAAW,EAAEC,OAAO,CAAC;EAC/C,CAAC;EAED,MAAMD,WAAW,GAAGA,CAAA,KAAM;IACxBzB,WAAW,CAAC2B,IAAI,CAAE,uBAAsB,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,SAAS,CAACxB,IAAI,CAAC,CAAC;IACnEL,WAAW,CAAC8B,SAAS,CAAE,wBAAuBhB,QAAS,EAAC,EAAEiB,iBAAiB,CAAC;IAC5EnB,WAAW,CAACP,IAAI,CAACQ,QAAQ,CAAC;IAC1BE,WAAW,CAACV,IAAI,CAACS,QAAQ,CAAC;EAC5B,CAAC;EAED,MAAMiB,iBAAiB,GAAIC,OAAO,IAAK;IACrCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,OAAO,CAAC;IACzC,IAAIG,WAAW,GAAGP,IAAI,CAACQ,KAAK,CAACJ,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC;IAC5CJ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,WAAW,CAAC;IACxC3B,cAAc,CAAC8B,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAEH,WAAW,CAAC,CAAC;;IAExD;IACAlB,eAAe,CAACsB,OAAO,CAACC,SAAS,GAAGvB,eAAe,CAACsB,OAAO,CAACE,YAAY;EAC1E,CAAC;EAED,MAAMf,OAAO,GAAIgB,GAAG,IAAK;IACvBT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;EAClB,CAAC;EAED,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/B,MAAM;MAAEC;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9BpC,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,SAAS,EAAEoC;IAAM,CAAC,CAAC;EAChD,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI/C,WAAW,EAAE;MACf,IAAIgD,WAAW,GAAG;QAChBnC,QAAQ,EAAEF,QAAQ;QAClBG,QAAQ,EAAEA,QAAQ;QAClBmC,OAAO,EAAExC,QAAQ,CAACyC,OAAO;QACzBC,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC;MACDnB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEc,WAAW,CAAC;MAC5ChD,WAAW,CAAC2B,IAAI,CAAE,WAAU,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,SAAS,CAACmB,WAAW,CAAC,CAAC;MAC9DtC,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAE,SAAS,EAAE;MAAG,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,MAAMc,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIvB,WAAW,EAAE;MACfA,WAAW,CAAC2B,IAAI,CAAE,0BAAyB,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,SAAS,CAACxB,IAAI,CAAC,CAAC;MACtEK,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAE,WAAW,EAAE;MAAM,CAAC,CAAC;MAChDZ,KAAK,CACFwD,GAAG,CAAC,2CAA2C,GAAGvC,QAAQ,GAAG,UAAU,GAAGT,IAAI,CAACiD,MAAM,CAAC,CACtFC,IAAI,CAAEC,GAAG,IAAK;QACbxC,QAAQ,CAAE,QAAO,EAAE;UAAEV,KAAK,EAAE;YAAED,IAAI,EAAEmD,GAAG,CAACC;UAAK;QAAE,CAAC,CAAC;MACnD,CAAC,CAAC,CACDC,KAAK,CAAEhB,GAAG,IAAK;QACdT,OAAO,CAAC0B,KAAK,CAACjB,GAAG,CAAC;MACpB,CAAC,CAAC;IACN;EACF,CAAC;EAED,oBACE3C,OAAA;IAAK6D,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB9D,OAAA;MAAK6D,SAAS,EAAC,cAAc;MAACE,GAAG,EAAE7C,eAAgB;MAAA4C,QAAA,eACjD9D,OAAA;QAAI6D,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC1BtD,WAAW,CAACwD,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3BlE,OAAA;UAAI6D,SAAS,EAAG,WAAUI,IAAI,CAACnD,QAAQ,KAAKF,QAAQ,IAAI,MAAO,EAAE;UAAAkD,QAAA,GAC9DG,IAAI,CAACnD,QAAQ,KAAKF,QAAQ,iBAAIZ,OAAA;YAAK6D,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAEG,IAAI,CAACnD;UAAQ;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5EtE,OAAA;YAAK6D,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEG,IAAI,CAACf;UAAO;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACjDL,IAAI,CAACnD,QAAQ,KAAKF,QAAQ,iBAAIZ,OAAA;YAAK6D,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEG,IAAI,CAACnD;UAAQ;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAHZJ,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIxE,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENtE,OAAA;MAAK6D,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B9D,OAAA;QACEuE,IAAI,EAAC,MAAM;QACXV,SAAS,EAAC,eAAe;QACzBW,WAAW,EAAC,mBAAmB;QAC/B1B,KAAK,EAAEpC,QAAQ,CAACyC,OAAQ;QACxBsB,QAAQ,EAAE7B;MAAc;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFtE,OAAA;QAAQuE,IAAI,EAAC,QAAQ;QAACV,SAAS,EAAC,aAAa;QAACa,OAAO,EAAE1B,SAAU;QAAAc,QAAA,EAAC;MAElE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtE,OAAA;QAAQuE,IAAI,EAAC,QAAQ;QAACV,SAAS,EAAC,aAAa;QAACa,OAAO,EAAElD,aAAc;QAAAsC,QAAA,EAAC;MAEtE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnE,EAAA,CAzHID,QAAQ;EAAA,QACKN,WAAW,EAMXC,WAAW;AAAA;AAAA8E,EAAA,GAPxBzE,QAAQ;AA2Hd,eAAeA,QAAQ;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}