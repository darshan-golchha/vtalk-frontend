{"ast":null,"code":"var _jsxFileName = \"/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/chatroom.css';\nimport { useLoadingContext } from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatPage = () => {\n  _s();\n  var _location$state;\n  const {\n    isLoading,\n    setLoading,\n    disableAllInputs,\n    enableAllInputs\n  } = useLoadingContext();\n  const currentDate = new Date(chat.timestamp).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  });\n  const location = useLocation();\n  const user = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.user;\n  const [publicChats, setPublicChats] = useState([]);\n  const [userData, setUserData] = useState({\n    \"message\": \"\",\n    \"connected\": false\n  });\n  const [username, setUsername] = useState(user.fullName);\n  const [roomCode, setRoomCode] = useState(user.roomCode);\n  const navigate = useNavigate();\n  const chatMessagesRef = useRef(null);\n  const [label, setLabel] = useState('Room Label');\n  useEffect(() => {\n    if (roomCode) {\n      connect();\n    }\n\n    // Set up beforeunload event listener\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    // Cleanup event listener on component unmount\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [roomCode]);\n  const handleBeforeUnload = () => {\n    axios.post('http://192.168.29.186:8080/deleteUser', JSON.stringify(user)).catch(err => {\n      console.error(err);\n    });\n    leaveChatroom();\n  };\n  const connect = () => {\n    let Sock = new SockJS('http://192.168.29.186:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const onConnected = () => {\n    // Getting previous chats of the room\n    axios.get('http://192.168.29.186:8080/chats?roomcode=' + roomCode).then(res => {\n      setPublicChats(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n    stompClient.send(`/app/user/connectUser`, {}, JSON.stringify(user));\n    stompClient.subscribe(`/user/vtalk/messages/${roomCode}`, onMessageReceived);\n    axios.get('http://192.168.29.186:8080/roomLabel' + '?roomcode=' + roomCode).then(res => {\n      setLabel(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n    setRoomCode(user.roomCode);\n  };\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n    setPublicChats(prevChats => [...prevChats, payloadData]);\n\n    // Scroll to the bottom of the chatMessagesRef on new message\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"message\": value\n    });\n  };\n  const sendValue = event => {\n    event.preventDefault();\n    setUserData({\n      ...userData,\n      \"connected\": true\n    });\n    setLoading(true);\n    disableAllInputs();\n    if (stompClient) {\n      var chatMessage = {\n        fullName: username,\n        roomCode: roomCode,\n        content: userData.message,\n        timestamp: new Date()\n      };\n      stompClient.send(`/app/chat`, {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n    setLoading(false);\n    enableAllInputs();\n  };\n  const leaveChatroom = () => {\n    setLoading(true);\n    disableAllInputs();\n    if (stompClient) {\n      stompClient.send(`/app/user/disconnectUser`, {}, JSON.stringify(user));\n      setUserData({\n        ...userData,\n        \"connected\": false\n      });\n      axios.get('http://192.168.29.186:8080/leaveRoom?roomcode=' + roomCode + '&userid=' + user.userId).then(res => {\n        setLoading(false);\n        enableAllInputs();\n        navigate(`/rooms`, {\n          state: {\n            user: res.data\n          }\n        });\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  };\n  const getDateStampText = dateString => {\n    console.log(dateString);\n    const today = new Date().toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n    const yesterday = new Date(Date.now() - 86400000).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n    if (dateString === today) {\n      return 'Today';\n    } else if (dateString === yesterday) {\n      return 'Yesterday';\n    } else {\n      return dateString;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: \"Leaving The Chat Room...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://img.icons8.com/color/exit\",\n        className: \"leave-button\",\n        onClick: leaveChatroom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      ref: chatMessagesRef,\n      children: publicChats.map((chat, index, chats) => {\n        const showDateStamp = index === 0 || currentDate !== new Date(chats[index - 1].timestamp).toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit'\n        });\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [showDateStamp && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message notification date-stamp\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: getDateStampText(currentDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${chat.fullName === username ? \"self\" : \"\"} ${chat.fullName ? \"\" : \"notification\"}`,\n            children: [chat.fullName && chat.fullName !== username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.fullName[0].toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 65\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: chat.fullName ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"content-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: chat.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"message-time\",\n                    children: new Date(chat.timestamp).toLocaleTimeString([], {\n                      hour: '2-digit',\n                      minute: '2-digit',\n                      hour12: true\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"notification\",\n                  children: chat.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), chat.fullName && chat.fullName === username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.fullName[0].toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 65\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendValue,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"send-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-message\",\n          placeholder: \"Enter your message...\",\n          value: userData.message,\n          onChange: handleMessage,\n          onSubmit: sendValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://img.icons8.com/color/sent\",\n          className: \"send-button\",\n          onClick: sendValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"03npH7Cqu+x7exMdL9pdJno0rGw=\", false, function () {\n  return [useLoadingContext, useLocation, useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","over","SockJS","useLocation","useNavigate","axios","useLoadingContext","jsxDEV","_jsxDEV","stompClient","ChatPage","_s","_location$state","isLoading","setLoading","disableAllInputs","enableAllInputs","currentDate","Date","chat","timestamp","toLocaleDateString","year","month","day","location","user","state","publicChats","setPublicChats","userData","setUserData","username","setUsername","fullName","roomCode","setRoomCode","navigate","chatMessagesRef","label","setLabel","connect","window","addEventListener","handleBeforeUnload","removeEventListener","post","JSON","stringify","catch","err","console","error","leaveChatroom","Sock","onConnected","onError","get","then","res","data","send","subscribe","onMessageReceived","payload","payloadData","parse","body","prevChats","current","scrollTop","scrollHeight","log","handleMessage","event","value","target","sendValue","preventDefault","chatMessage","content","message","userId","getDateStampText","dateString","today","yesterday","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","ref","map","index","chats","showDateStamp","Fragment","toUpperCase","toLocaleTimeString","hour","minute","hour12","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/chatroom.css';\nimport { useLoadingContext } from '../components/Loader'\n\nvar stompClient = null;\n\nconst ChatPage = () => {\n  const { isLoading, setLoading, disableAllInputs, enableAllInputs } = useLoadingContext();\n  const currentDate = new Date(chat.timestamp).toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n  const location = useLocation();\n  const user = location.state?.user;\n  const [publicChats, setPublicChats] = useState([]);\n  const [userData, setUserData] = useState({ \"message\": \"\", \"connected\": false });\n  const [username, setUsername] = useState(user.fullName);\n  const [roomCode, setRoomCode] = useState(user.roomCode);\n  const navigate = useNavigate();\n  const chatMessagesRef = useRef(null);\n  const [label, setLabel] = useState('Room Label');\n\n  useEffect(() => {\n    if (roomCode) {\n      connect();\n    }\n\n    // Set up beforeunload event listener\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    // Cleanup event listener on component unmount\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [roomCode]);\n\n  const handleBeforeUnload = () => {\n    axios\n      .post('http://192.168.29.186:8080/deleteUser', JSON.stringify(user))\n      .catch((err) => {\n        console.error(err);\n      });\n    leaveChatroom();\n  };\n\n  const connect = () => {\n    let Sock = new SockJS('http://192.168.29.186:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    // Getting previous chats of the room\n    axios\n      .get('http://192.168.29.186:8080/chats?roomcode=' + roomCode)\n      .then((res) => {\n        setPublicChats(res.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    stompClient.send(`/app/user/connectUser`, {}, JSON.stringify(user));\n    stompClient.subscribe(`/user/vtalk/messages/${roomCode}`, onMessageReceived);\n    axios\n      .get('http://192.168.29.186:8080/roomLabel' + '?roomcode=' + roomCode)\n      .then((res) => {\n        setLabel(res.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    setRoomCode(user.roomCode);\n  };\n\n  const onMessageReceived = (payload) => {\n    var payloadData = JSON.parse(payload.body);\n    setPublicChats(prevChats => [...prevChats, payloadData]);\n\n    // Scroll to the bottom of the chatMessagesRef on new message\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  };\n\n  const onError = (err) => {\n    console.log(err);\n  };\n\n  const handleMessage = (event) => {\n    const { value } = event.target;\n    setUserData({ ...userData, \"message\": value });\n  };\n\n  const sendValue = (event) => {\n    event.preventDefault();\n    setUserData({ ...userData, \"connected\": true });\n    setLoading(true);\n    disableAllInputs();\n    if (stompClient) {\n      var chatMessage = {\n        fullName: username,\n        roomCode: roomCode,\n        content: userData.message,\n        timestamp: new Date(),\n      };\n      stompClient.send(`/app/chat`, {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData, \"message\": \"\" });\n    }\n    setLoading(false);\n    enableAllInputs();\n  };\n\n  const leaveChatroom = () => {\n    setLoading(true);\n    disableAllInputs();\n    if (stompClient) {\n      stompClient.send(`/app/user/disconnectUser`, {}, JSON.stringify(user));\n      setUserData({ ...userData, \"connected\": false });\n      axios\n        .get('http://192.168.29.186:8080/leaveRoom?roomcode=' + roomCode + '&userid=' + user.userId)\n        .then((res) => {\n          setLoading(false);\n          enableAllInputs();\n          navigate(`/rooms`, { state: { user: res.data } });\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  };\n\n  const getDateStampText = (dateString) => {\n    console.log(dateString); \n    const today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    const yesterday = new Date(Date.now() - 86400000).toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n\n    if (dateString === today) {\n      return 'Today';\n    } else if (dateString === yesterday) {\n      return 'Yesterday';\n    } else {\n      return dateString;\n    }\n  };\n\n\n  return (\n    <div className=\"chat-box\">\n      {isLoading && <div className=\"loader\">Leaving The Chat Room...</div>}\n      <div className='chat-top'>\n        <div className=\"room-label\">{label}</div>\n        <img src=\"https://img.icons8.com/color/exit\" className='leave-button' onClick={leaveChatroom} />\n      </div>\n      <div className=\"chat-content\" ref={chatMessagesRef}>\n        {publicChats.map((chat, index, chats) => {\n          const showDateStamp = index === 0 || currentDate !== new Date(chats[index - 1].timestamp).toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n\n          return (\n            <React.Fragment key={index}>\n              {showDateStamp && (\n                <div className=\"message notification date-stamp\">\n                  <p>{getDateStampText(currentDate)}</p>\n                </div>\n              )}\n\n              <div className={`message ${chat.fullName === username ? \"self\" : \"\"} ${chat.fullName ? \"\" : \"notification\"}`} key={index}>\n                {chat.fullName && chat.fullName !== username && <div className=\"avatar\">{chat.fullName[0].toUpperCase()}</div>}\n                <div className=\"message-data\">\n                  <div>\n                    {chat.fullName ? (\n                      <div className='content-message'>\n                        <p>{chat.content}</p>\n                        <p className=\"message-time\">\n                          {new Date(chat.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true })}\n                        </p>\n                      </div>\n                    ) : (\n                      <p className=\"notification\">{chat.content}</p>\n                    )}\n                  </div>\n                </div>\n                {chat.fullName && chat.fullName === username && <div className=\"avatar\">{chat.fullName[0].toUpperCase()}</div>}\n              </div>\n            </React.Fragment>\n          );\n        })}\n      </div>\n\n      <form onSubmit={sendValue}>\n        <div className=\"send-message\">\n          <input\n            type=\"text\"\n            className=\"input-message\"\n            placeholder=\"Enter your message...\"\n            value={userData.message}\n            onChange={handleMessage}\n            onSubmit={sendValue}\n          />\n          <img src=\"https://img.icons8.com/color/sent\" className='send-button' onClick={sendValue} />\n        </div>\n      </form>\n    </div>\n\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}