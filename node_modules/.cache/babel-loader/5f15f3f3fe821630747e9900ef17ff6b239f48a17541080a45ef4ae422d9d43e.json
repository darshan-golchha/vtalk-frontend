{"ast":null,"code":"var _jsxFileName = \"/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/RoomSelection.js\",\n  _s = $RefreshSig$();\n// RoomSelection.js\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserRegister from '../components/UserRegistration';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomSelection = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    // Fetch the list of available chat rooms from the server\n    // For example, you can use an API call here\n    // Update the setRooms state with the list of rooms\n  }, []);\n  const handleUserRegistered = username => {\n    // Perform any necessary actions when the user is registered (e.g., connect to WebSocket)\n    // Then, navigate to the chat page with the selected username\n    // For simplicity, just update the state for now\n    setRooms([...rooms]); // Assuming you have a list of rooms\n  };\n\n  const handleRoomSelected = roomCode => {\n    // Redirect to the chat page with the selected room and username\n    // For simplicity, assuming you have a default username for now\n    const username = 'defaultUsername'; // Replace with the actual username\n    window.location.href = `/room`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose or Create a Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleRoomSelected(room.roomCode),\n          children: \"Select Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, room.roomCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserRegister, {\n      onUserRegistered: handleUserRegistered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomSelection, \"pVIe8tJm1V/hStRMkuwTtBQhqgo=\");\n_c = RoomSelection;\nexport default RoomSelection;\nvar _c;\n$RefreshReg$(_c, \"RoomSelection\");","map":{"version":3,"names":["React","useEffect","useState","Link","UserRegister","jsxDEV","_jsxDEV","RoomSelection","_s","rooms","setRooms","handleUserRegistered","username","handleRoomSelected","roomCode","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","room","type","onClick","onUserRegistered","_c","$RefreshReg$"],"sources":["/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/RoomSelection.js"],"sourcesContent":["// RoomSelection.js\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserRegister from '../components/UserRegistration';\n\nconst RoomSelection = () => {\n  const [rooms, setRooms] = useState([]);\n\n  useEffect(() => {\n    // Fetch the list of available chat rooms from the server\n    // For example, you can use an API call here\n    // Update the setRooms state with the list of rooms\n  }, []);\n\n  const handleUserRegistered = (username) => {\n    // Perform any necessary actions when the user is registered (e.g., connect to WebSocket)\n    // Then, navigate to the chat page with the selected username\n    // For simplicity, just update the state for now\n    setRooms([...rooms]); // Assuming you have a list of rooms\n  };\n\n  const handleRoomSelected = (roomCode) => {\n    // Redirect to the chat page with the selected room and username\n    // For simplicity, assuming you have a default username for now\n    const username = 'defaultUsername'; // Replace with the actual username\n    window.location.href = `/room`;\n  };\n\n  return (\n    <div className=\"room-selection\">\n      <h2>Choose or Create a Chat Room</h2>\n      {/* Display the list of available chat rooms */}\n      {/* Allow the user to create a new room or select an existing one */}\n      {/* For simplicity, you can just display the list of rooms here */}\n      <ul>\n        {rooms.map((room) => (\n          <li key={room.roomCode}>\n            {/* Render the room information (e.g., room name, description) */}\n            {/* Allow the user to select the room */}\n            <button type=\"button\" onClick={() => handleRoomSelected(room.roomCode)}>\n              Select Room\n            </button>\n          </li>\n        ))}\n      </ul>\n      <UserRegister onUserRegistered={handleUserRegistered} />\n    </div>\n  );\n};\n\nexport default RoomSelection;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,YAAY,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA;IACA;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,MAAMU,oBAAoB,GAAIC,QAAQ,IAAK;IACzC;IACA;IACA;IACAF,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED,MAAMI,kBAAkB,GAAIC,QAAQ,IAAK;IACvC;IACA;IACA,MAAMF,QAAQ,GAAG,iBAAiB,CAAC,CAAC;IACpCG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAI,OAAM;EAChC,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bb,OAAA;MAAAa,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAIrCjB,OAAA;MAAAa,QAAA,EACGV,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACdnB,OAAA;QAAAa,QAAA,eAGEb,OAAA;UAAQoB,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAEA,CAAA,KAAMd,kBAAkB,CAACY,IAAI,CAACX,QAAQ,CAAE;UAAAK,QAAA,EAAC;QAExE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC,GALFE,IAAI,CAACX,QAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMlB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLjB,OAAA,CAACF,YAAY;MAACwB,gBAAgB,EAAEjB;IAAqB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAACf,EAAA,CA3CID,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AA6CnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}