{"ast":null,"code":"var _jsxFileName = \"/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/RoomSelection.js\",\n  _s = $RefreshSig$();\n// RoomSelection.js\nimport React, { useEffect, useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet stompClient = null;\nconst RoomSelection = props => {\n  _s();\n  const user = props.location.state.user;\n  const [username, setUsername] = useState(user.fullName);\n  const [roomCode, setRoomCode] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [roomDescription, setRoomDescription] = useState('');\n  useEffect(() => {\n    connect();\n  }, []);\n  const handleRoomRecieved = () => {\n    axios.get('http://localhost:8080/rooms').then(res => {\n      setRooms(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  const handleCreateRoom = () => {\n    // Ensure roomDescription is not empty before creating a room\n    if (roomDescription.trim() !== '') {\n      if (stompClient && stompClient.connected) {\n        // stompClient is connected, send the message\n        stompClient.send('/app/createRoom', {}, JSON.stringify({\n          description: roomDescription\n        }));\n        // Assuming you have a default username for now\n        const username = 'defaultUsername';\n        window.location.href = `/chat/${roomCode}/${username}`;\n      } else {\n        // stompClient is not connected, show an error or attempt to connect\n        console.error('WebSocket connection not established');\n        // You can attempt to connect here or show an error to the user\n        // Example: connect();\n      }\n    }\n  };\n\n  const handleRoomSelected = roomCode => {\n    // Redirect to the chat page with the selected room and username\n    // For simplicity, assuming you have a default username for now\n    const uname = username;\n    setRoomCode(roomCode);\n    window.location.href = `/chat/${roomCode}/${uname}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", user.fullName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose or Create a Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter room description\",\n      value: roomDescription,\n      onChange: e => setRoomDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleCreateRoom,\n      children: \"Create Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Available Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleRoomSelected(room.roomCode),\n          children: \"Select Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, room.roomCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomSelection, \"RLB4qwhD6YPAZo3a5zOTOjU5ekQ=\");\n_c = RoomSelection;\nexport default RoomSelection;\nvar _c;\n$RefreshReg$(_c, \"RoomSelection\");","map":{"version":3,"names":["React","useEffect","useState","SockJS","over","Link","jsxDEV","_jsxDEV","stompClient","RoomSelection","props","_s","user","location","state","username","setUsername","fullName","roomCode","setRoomCode","rooms","setRooms","roomDescription","setRoomDescription","connect","handleRoomRecieved","axios","get","then","res","data","catch","err","console","error","handleCreateRoom","trim","connected","send","JSON","stringify","description","window","href","handleRoomSelected","uname","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","room","_c","$RefreshReg$"],"sources":["/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/RoomSelection.js"],"sourcesContent":["// RoomSelection.js\nimport React, { useEffect, useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\nimport { Link } from 'react-router-dom';\n\nlet stompClient = null;\nconst RoomSelection = (props) => {\n  const user = props.location.state.user;\n  const [username, setUsername] = useState(user.fullName);\n  const [roomCode, setRoomCode] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [roomDescription, setRoomDescription] = useState('');\n\n  useEffect(() => {\n    connect();\n  }, []);\n\n  const handleRoomRecieved = () => {\n    axios\n      .get('http://localhost:8080/rooms')\n      .then((res) => {\n        setRooms(res.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  const handleCreateRoom = () => {\n    // Ensure roomDescription is not empty before creating a room\n    if (roomDescription.trim() !== '') {\n      if (stompClient && stompClient.connected) {\n        // stompClient is connected, send the message\n        stompClient.send('/app/createRoom', {}, JSON.stringify({ description: roomDescription }));\n        // Assuming you have a default username for now\n        const username = 'defaultUsername';\n        window.location.href = `/chat/${roomCode}/${username}`;\n      } else {\n        // stompClient is not connected, show an error or attempt to connect\n        console.error('WebSocket connection not established');\n        // You can attempt to connect here or show an error to the user\n        // Example: connect();\n      }\n    }\n  };  \n\n  const handleRoomSelected = (roomCode) => {\n    // Redirect to the chat page with the selected room and username\n    // For simplicity, assuming you have a default username for now\n    const uname = username;\n    setRoomCode(roomCode);\n    window.location.href = `/chat/${roomCode}/${uname}`;\n  };\n\n  return (\n    <div className=\"room-selection\">\n      <h2>Welcome, {user.fullName}!</h2>\n      <h2>Choose or Create a Chat Room</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter room description\"\n        value={roomDescription}\n        onChange={(e) => setRoomDescription(e.target.value)}\n      />\n      <button type=\"button\" onClick={handleCreateRoom}>\n        Create Room\n      </button>\n      <h3>Available Rooms</h3>\n      <ul>\n        {rooms.map((room) => (\n          <li key={room.roomCode}>\n            <button type=\"button\" onClick={() => handleRoomSelected(room.roomCode)}>\n              Select Room\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RoomSelection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}