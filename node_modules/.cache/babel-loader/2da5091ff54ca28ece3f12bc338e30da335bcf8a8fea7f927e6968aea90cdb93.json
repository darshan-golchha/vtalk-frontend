{"ast":null,"code":"var _jsxFileName = \"/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/UserRegistration.js\",\n  _s = $RefreshSig$();\n// UserRegistration.js\nimport React, { useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserRegistration = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const connect = () => {\n    let stompClient = null;\n    const Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n    function onConnected() {\n      const regMsg = {\n        fullName: username\n      };\n      stompClient.send('/app/user/addUser', {}, JSON.stringify(regMsg));\n    }\n    function onError(err) {\n      console.log('Error:', err);\n    }\n  };\n  const onRoomsReceived = payload => {\n    const payloadData = JSON.parse(payload.body);\n    setRooms(...rooms, payloadData);\n  };\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handleRegister = () => {\n    connect();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-registration\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your username\",\n      value: username,\n      onChange: handleUsernameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleRegister,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(UserRegistration, \"kfcqqz1FQoWnPZzqCrcw5cGND/Y=\");\n_c = UserRegistration;\nexport default UserRegistration;\nvar _c;\n$RefreshReg$(_c, \"UserRegistration\");","map":{"version":3,"names":["React","useState","SockJS","over","jsxDEV","_jsxDEV","UserRegistration","_s","username","setUsername","rooms","setRooms","connect","stompClient","Sock","onConnected","onError","regMsg","fullName","send","JSON","stringify","err","console","log","onRoomsReceived","payload","payloadData","parse","body","handleUsernameChange","event","target","value","handleRegister","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/darshan/Documents/VTalk/vtalk_frontend/src/components/UserRegistration.js"],"sourcesContent":["// UserRegistration.js\nimport React, { useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\n\nconst UserRegistration = () => {\n  const [username, setUsername] = useState('');\n  const [rooms, setRooms] = useState([]);\n\n  const connect = () => {\n    let stompClient = null;\n\n    const Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n\n    function onConnected() {\n      const regMsg = {\n        fullName : username\n      }\n      stompClient.send('/app/user/addUser', {}, JSON.stringify(regMsg))\n    }\n\n    function onError(err) {\n      console.log('Error:', err);\n    }\n  };\n\n  const onRoomsReceived = (payload) => {\n    const payloadData = JSON.parse(payload.body);\n    setRooms(...rooms, payloadData);\n  };\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handleRegister = () => {\n    connect();\n  };\n\n  return (\n    <div className=\"user-registration\">\n      <h2>User Registration</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter your username\"\n        value={username}\n        onChange={handleUsernameChange}\n      />\n      <button type=\"button\" onClick={handleRegister}>\n        Register\n      </button>\n      \n    </div>\n  );\n};\n\nexport default UserRegistration;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,IAAI,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIC,WAAW,GAAG,IAAI;IAEtB,MAAMC,IAAI,GAAG,IAAIZ,MAAM,CAAC,0BAA0B,CAAC;IACnDW,WAAW,GAAGV,IAAI,CAACW,IAAI,CAAC;IACxBD,WAAW,CAACD,OAAO,CAAC,CAAC,CAAC,EAAEG,WAAW,EAAEC,OAAO,CAAC;IAE7C,SAASD,WAAWA,CAAA,EAAG;MACrB,MAAME,MAAM,GAAG;QACbC,QAAQ,EAAGV;MACb,CAAC;MACDK,WAAW,CAACM,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC,CAAC;IACnE;IAEA,SAASD,OAAOA,CAACM,GAAG,EAAE;MACpBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,GAAG,CAAC;IAC5B;EACF,CAAC;EAED,MAAMG,eAAe,GAAIC,OAAO,IAAK;IACnC,MAAMC,WAAW,GAAGP,IAAI,CAACQ,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC;IAC5ClB,QAAQ,CAAC,GAAGD,KAAK,EAAEiB,WAAW,CAAC;EACjC,CAAC;EAED,MAAMG,oBAAoB,GAAIC,KAAK,IAAK;IACtCtB,WAAW,CAACsB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BtB,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEP,OAAA;IAAK8B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC/B,OAAA;MAAA+B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnC,OAAA;MACEoC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,qBAAqB;MACjCT,KAAK,EAAEzB,QAAS;MAChBmC,QAAQ,EAAEb;IAAqB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFnC,OAAA;MAAQoC,IAAI,EAAC,QAAQ;MAACG,OAAO,EAAEV,cAAe;MAAAE,QAAA,EAAC;IAE/C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV,CAAC;AAACjC,EAAA,CAnDID,gBAAgB;AAAAuC,EAAA,GAAhBvC,gBAAgB;AAqDtB,eAAeA,gBAAgB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}